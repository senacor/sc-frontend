// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PrTextField Component should be disabled for ActionPerformer before editing is enabled 1`] = `
<WithStyles(FormControl)
  disabled={true}
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    rows="6"
    rowsMax="10"
    value=""
  />
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should be disabled for ActionPerformer when it is released as read-only, but there is no entry 1`] = `
<WithStyles(FormControl)
  disabled={true}
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    rows="6"
    rowsMax="10"
    value=""
  />
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should be disabled for nonActionPerformer before it is released as read-only 1`] = `
<WithStyles(FormControl)
  disabled={true}
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    rows="6"
    rowsMax="10"
    value=""
  />
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should be disabled for nonActionPerformer when it is released as read-only, but there is a null-entry 1`] = `
<WithStyles(FormControl)
  disabled={true}
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    rows="6"
    rowsMax="10"
    value=""
  />
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should be in error-mode for ActionPerformer when it has an errorFlag and there is no entry 1`] = `
<WithStyles(FormControl)
  error={true}
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    rows="6"
    rowsMax="10"
    value=""
  />
  <WithStyles(FormHelperText)>
    Error: Bitte f√ºlle das Pflichtfeld aus, bevor du das PR freigibst.
  </WithStyles(FormHelperText)>
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should be in read-only-mode for ActionPerformer when it is released as read-only and the entry is non-zero 1`] = `
<WithStyles(FormControl)
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    readOnly={true}
    rows="6"
    rowsMax="10"
    value="this is only to be read"
  />
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should be in read-only-mode for nonActionPerformer when it is released as read-only and the entry is non-zero 1`] = `
<WithStyles(FormControl)
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    readOnly={true}
    rows="6"
    rowsMax="10"
    value="this is only to be read"
  />
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should be in standard enabled mode for ActionPerformer when editing is open and it is not released as read-only 1`] = `
<WithStyles(FormControl)
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    rows="6"
    rowsMax="10"
    value="we can write on this"
  />
</WithStyles(FormControl)>
`;

exports[`PrTextField Component should not be in error-mode but in standard enabled mode for ActionPerformer when it has an errorFlag and there is an entry 1`] = `
<WithStyles(FormControl)
  fullWidth={true}
  margin="normal"
  required={false}
  variant="outlined"
>
  <WithStyles(OutlinedInput)
    fullWidth={true}
    labelWidth={0}
    multiline={true}
    rows="6"
    rowsMax="10"
    value="we can write on this"
  />
</WithStyles(FormControl)>
`;
